<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      lang="en">

<h:head>
</h:head>

<h:body>
<ui:composition template="../../template.xhtml">
    <ui:define name="content">
        <h2>Chapter 5 - Facelets</h2>
        <div>
            Facelets supports the following tags:
        </div>

        <table>
            <tr>
                <th>Tag Library</th>
                <th>URI</th>
                <th>Prefix</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>JSF Facelets Tag Library</td>
                <td>http://java.sun.com/jsf/facelets</td>
                <td>ui</td>
                <td>Tags for templating (this is the only *Facelets specific* tag library)</td>
            </tr>
            <tr>
                <td>JSF HTML Tag Library</td>
                <td>http://java.sun.com/jsf/html</td>
                <td>h</td>
                <td>JSF component tags for all UIComponent objects</td>
            </tr>
            <tr>
                <td>JSF Core Tag Library</td>
                <td>http://java.sun.com/jsf/core</td>
                <td>f</td>
                <td>Tags for JSF custom actions that are independent of any particular render kit</td>
            </tr>
            <tr>
                <td>JSTL Core Tag Library</td>
                <td>http://java.sun.com/jsp/jstl/core</td>
                <td>c</td>
                <td>JSTL 1.2 Core Tags</td>
            </tr>
            <tr>
                <td>JSTL Functions Tag Library</td>
                <td>http://java.sun.com/jsp/jstl/functions</td>
                <td>fn</td>
                <td>JSTL 1.2 Functions Tags</td>
            </tr>
        </table>

        <div>
            On Oracle's web site you can find complete <a
                href="https://docs.oracle.com/cd/E17802_01/j2ee/javaee/javaserverfaces/2.0/docs/pdldocs/facelets/"
                target="_blank">documentation
            for all the tag libraries supported by Facelets</a>.
        </div>

        <div>Facelets templating tags:</div>
        <ul>
            <li><b>ui:include</b>: Includes another piece of content (this is not really a templating tag, it is for reuse of content)</li>
            <li><b>ui:insert</b>: An insertion point in a template (comparable to wicket:child). Any xhtml file containing one or more ui:include is a template.</li>
            <li><b>ui:composition</b>: Defines the template that should be used (in the 'name' attribute).</li>
            <li><b>ui:define</b>: Nested inside ui:composition; defines the insertion points for the template.</li>
            <li><b>ui:remove</b>: </li>
            <li><b>ui:param</b>: </li>
            <li><b>ui:repeat</b>: </li>
            <li><b>ui:fragment</b>: </li>
            <li><b>ui:decorate</b>: </li>
            <li><b>ui:debug</b>: Allows you to obtain debug information on the client using "SHIFT - CTRL - d"</li>
            <li><b>ui:component</b>: </li>
        </ul>

        <div>
            Difference between Wicket and Facelets:
            <ul>
                <li>JSF templating is more powerfull (multiple ui:insert on one page). A Wicket page or component can have only one wicket:child.</li>
                <li>Wicket markup files resemble the rendered page (&lt;form wicket:id="form"&gt;). JSF markup files are a world apart from the final HTML result
                with its custom tags (&lt;ui:form id="form"&gt;), EL and excessive response.write()'s in Java code.</li>
                <li>JSF Managed Beans on the other hand are much more lightweight than Wicket's Component and IModel.</li>
            </ul>

            <p>
                Note: JSF 2.2 introduces a much less invasive way of defining markup (you can write &lt;form jsf:id="form"&gt; just like in Wicket).
            </p>
        </div>

    </ui:define>
</ui:composition>
</h:body>

</html>