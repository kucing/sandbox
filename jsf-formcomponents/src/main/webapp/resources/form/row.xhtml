<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:composite="http://java.sun.com/jsf/composite">

    <!-- INTERFACE -->
    <composite:interface shortDescription="Template for a form row, assuming a default (configurable) grid layout.">
        <composite:attribute name="label" type="java.lang.String"/>
        <composite:attribute name="styleClassLabel" type="java.lang.String" default="col-xs-12 col-sm-3"/>
        <composite:attribute name="styleClassInput" type="java.lang.String" default="col-xs-12 col-sm-9"/>
    </composite:interface>


    <!-- IMPLEMENTATION -->
    <composite:implementation>

        <!-- TODO merge f:subview and h:panelGroup into something that:

            * Is a 'flexible' component finder (i.e. findComponent(String) will traverse all children recursively,
              regardless whether they are a NamingContainer or not).
            * Preferably it looks up children of type UIInput, instead of having to pass in an id
              (and thereby introducing an implicit dependency on children having a certain component id 'input').
            * Can check whether the child(ren?) of type UIInput contains errors (and if so, add css class 'has-error')

            http://incepttechnologies.blogspot.nl/p/jsf-implicit-objects.html
        -->

        <!-- wrap de hele regel in een NamingContainer, zodat .findComponent() niet buiten deze row gaat zoeken. -->
        <!-- http://stackoverflow.com/questions/3449370/jsf-how-to-create-a-naming-container -->
        <f:subview id="row">

            <!-- Als child een tag van type UIInput is, dan vindt component.findComponent('input') hem. -->
            <!-- Als child een composite component is, met daarin een UIInput, dan vindt findComponent niets. -->
            <!-- Zie de implementatie van UIComponentBase.findComponent(String). Je zult het complete id-pad moeten meegeven! -->
            <h:panelGroup id="panelGroup"
                          styleClass="row form-group#{component.findComponent('input').valid?'':' has-error'}"
                          layout="block"
                          rendered="#{cc.attrs.rendered}">

                <div class="#{cc.attrs.styleClassLabel}">
                    <h:outputLabel id="label"
                                   styleClass="control-label"
                                   for="#{component.findComponent('input').id}"
                                   value="#{cc.attrs.label}"/>
                </div>

                <!--http://stackoverflow.com/questions/6377542/jsf2-composite-components-are-cc-childcount-and-compositeinsertchildren-->
                <div class="#{cc.attrs.styleClassInput}">
                    <composite:insertChildren/>
                </div>
            </h:panelGroup>

        </f:subview>

    </composite:implementation>

</ui:composition>